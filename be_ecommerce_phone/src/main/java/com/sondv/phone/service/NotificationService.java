package com.sondv.phone.service;

import com.sondv.phone.entity.Product;
import lombok.RequiredArgsConstructor;
import org.springframework.mail.SimpleMailMessage;
import org.springframework.mail.javamail.JavaMailSender;
import org.springframework.stereotype.Service;

import java.util.logging.Logger;

@Service
@RequiredArgsConstructor
public class NotificationService {
    private final JavaMailSender mailSender;
    private static final Logger logger = Logger.getLogger(NotificationService.class.getName());

    // ‚úÖ G·ª≠i th√¥ng b√°o khi t·ªìn kho th·∫•p
    public void sendLowStockAlert(Product product, int quantity) {
        String message = "‚ö†Ô∏è C·∫¢NH B√ÅO: S·∫£n ph·∫©m '" + product.getName() + "' ch·ªâ c√≤n " + quantity + " trong kho!";
        logger.warning(message); // ‚úÖ Ghi log c·∫£nh b√°o

        // ‚úÖ G·ª≠i email cho Admin
        SimpleMailMessage mail = new SimpleMailMessage();
        mail.setTo("admin@example.com");
        mail.setSubject("C·∫£nh B√°o T·ªìn Kho Th·∫•p");
        mail.setText(message);
        mailSender.send(mail);
    }

    // ‚úÖ G·ª≠i th√¥ng b√°o khi thanh to√°n th√†nh c√¥ng
    public void sendPaymentSuccessNotification(Long orderId, String transactionId, double amount) {
        String message = String.format(
                "üéâ THANH TO√ÅN TH√ÄNH C√îNG!\n" +
                        "üì¶ ƒê∆°n h√†ng: #%d\n" +
                        "üí∞ S·ªë ti·ªÅn: %,.0f VND\n" +
                        "üè¶ M√£ giao d·ªãch: %s\n" +
                        "‚è∞ Th·ªùi gian: %s",
                orderId,
                amount,
                transactionId,
                java.time.LocalDateTime.now()
                        .format(java.time.format.DateTimeFormatter.ofPattern("dd/MM/yyyy HH:mm:ss")));

        logger.info(message); // ‚úÖ Ghi log th√¥ng b√°o

        try {
            // ‚úÖ G·ª≠i email cho Admin
            SimpleMailMessage mail = new SimpleMailMessage();
            mail.setTo("admin@example.com");
            mail.setSubject("üéâ Th√¥ng B√°o Thanh To√°n Th√†nh C√¥ng - ƒê∆°n H√†ng #" + orderId);
            mail.setText(message);
            mailSender.send(mail);
            logger.info("‚úÖ ƒê√£ g·ª≠i email th√¥ng b√°o thanh to√°n th√†nh c√¥ng cho admin");
        } catch (Exception e) {
            logger.warning("‚ö†Ô∏è Kh√¥ng th·ªÉ g·ª≠i email th√¥ng b√°o: " + e.getMessage());
        }
    }
}
