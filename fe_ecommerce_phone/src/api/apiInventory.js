import axiosInstance from "./axiosConfig";

const apiInventory = {
    getInventoryByProduct: async (productId) => {
        try {
            const response = await axiosInstance.get(`/inventory/${productId}`);
            return response.data;
        } catch (error) {
            throw new Error(error.response?.data?.error || "L·ªói khi l·∫•y th√¥ng tin t·ªìn kho");
        }
    },

    getInventorySummary: async () => {
        try {
            const response = await axiosInstance.get("/inventory/summary");
            return response.data;
        } catch (error) {
            throw new Error(error.response?.data?.error || "L·ªói khi l·∫•y th·ªëng k√™ t·ªìn kho");
        }
    },

    adjustInventory: async (productId, quantityChange, reason) => {
        try {
            const response = await axiosInstance.post(`/inventory/adjust/${productId}`, null, {
                params: { quantityChange, reason }
            });
            return response.data;
        } catch (error) {
            const serverError = error.response?.data?.error || "L·ªói kh√¥ng x√°c ƒë·ªãnh t·ª´ server";
            throw new Error(`L·ªói khi ƒëi·ªÅu ch·ªânh t·ªìn kho: ${serverError}`);
        }
    },

    getInventoryLogs: async (productId = null, startDate = null, endDate = null, page = 0, size = 10) => {
        try {
            console.log("üîç G·ªçi API l·∫•y l·ªãch s·ª≠ t·ªìn kho v·ªõi params:", { productId, startDate, endDate, page, size });

            const response = await axiosInstance.get(`/inventory/logs`, {
                params: { productId, startDate, endDate, page, size }
            });

            console.log("‚úÖ API tr·∫£ v·ªÅ d·ªØ li·ªáu:", response.data);

            return response.data;
        } catch (error) {
            console.error("‚ùå L·ªói API getInventoryLogs:", error.response?.data || error.message);
            throw new Error(error.response?.data?.error || "L·ªói khi l·∫•y l·ªãch s·ª≠ t·ªìn kho");
        }
    },

    getInventoryReport: async (searchKeyword = "", status = null, page = 0, size = 10) => {
        try {
            const response = await axiosInstance.get("/inventory/report", {
                params: { searchKeyword, status, page, size }
            });
            return response.data;
        } catch (error) {
            throw new Error(error.response?.data?.error || "L·ªói khi l·∫•y b√°o c√°o t·ªìn kho");
        }
    },
};

export default apiInventory;